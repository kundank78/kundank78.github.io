"use strict";(self.webpackChunkkundan_dev=self.webpackChunkkundan_dev||[]).push([[36],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,k=u["".concat(p,".").concat(d)]||u[d]||s[d]||o;return n?a.createElement(k,l(l({ref:t},m),{},{components:n})):a.createElement(k,l({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5977:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return s}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),l=["components"],i={slug:"cheeat-sheet-ckad",title:"Cheat Sheet for CKAD",author:"Kundan Kumar",author_url:"https://github.com/kundank78",author_title:"Software Engineer at JP Morgan",author_image_url:"https://avatars.githubusercontent.com/u/25195457",tags:["go","bittorrent"]},p=void 0,c={permalink:"/blog/cheeat-sheet-ckad",source:"@site/blog/2023-03-16-ckad-notes.md",title:"Cheat Sheet for CKAD",description:"I got my CKAD certification in Dec, 2022 and I faced difficulty memorizing all the k8s object yamls & imperative commands. Cracking CKAD needs crystal k8s concepts along with bit of a practice K8s commands. Sharing below notes taken during my preparation.",date:"2023-03-16T00:00:00.000Z",formattedDate:"March 16, 2023",tags:[{label:"go",permalink:"/blog/tags/go"},{label:"bittorrent",permalink:"/blog/tags/bittorrent"}],readingTime:1.48,hasTruncateMarker:!0,authors:[{name:"Kundan Kumar",title:"Software Engineer at JP Morgan",url:"https://github.com/kundank78",imageURL:"https://avatars.githubusercontent.com/u/25195457"}],frontMatter:{slug:"cheeat-sheet-ckad",title:"Cheat Sheet for CKAD",author:"Kundan Kumar",author_url:"https://github.com/kundank78",author_title:"Software Engineer at JP Morgan",author_image_url:"https://avatars.githubusercontent.com/u/25195457",tags:["go","bittorrent"]},nextItem:{title:"GitHub Action for Docusaurus",permalink:"/blog/docusaurus-gh-action"}},m={authorsImageUrls:[void 0]},s=[{value:"Setting Alias ..... A Must",id:"setting-alias--a-must",level:3},{value:"K8s Cluster &amp; Namespace Commands",id:"k8s-cluster--namespace-commands",level:3},{value:"ReplicaSet",id:"replicaset",level:3},{value:"Deployment",id:"deployment",level:3}],u={toc:s};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"I got my CKAD certification in Dec, 2022 and I faced difficulty memorizing all the k8s object yamls & imperative commands. Cracking CKAD needs crystal k8s concepts along with bit of a practice K8s commands. Sharing below notes taken during my preparation."),(0,o.kt)("h3",{id:"setting-alias--a-must"},"Setting Alias ..... A Must"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'alias k=kubectl\n\nexport do="--dry-run=client -o yaml" \nk create deploy nginx --image=nginx $do\n\nexport now="--force --grace-period 0"\nk delete pod pod_name $now\n\n')),(0,o.kt)("h3",{id:"k8s-cluster--namespace-commands"},"K8s Cluster & Namespace Commands"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"k cluster-info"),(0,o.kt)("li",{parentName:"ul"},"k get nodes"),(0,o.kt)("li",{parentName:"ul"},"k config set-context --current --namespace=namespace_name"),(0,o.kt)("li",{parentName:"ul"},"k port-forward svc/my-service 5000")),(0,o.kt)("h3",{id:"replicaset"},"ReplicaSet"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"k get rs"),(0,o.kt)("li",{parentName:"ul"},"k scale --replicas=new_number rs replica_set_name")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"---\napiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: replica_set_name\n  labels:\n    key: value\nspec:\n  replicas: no_of_pods\n  selector:  #used to identify existing pods in env\n    matchLabels:\n      key: value\n  template:\n    metadata:\n      name: pod_name\n      labels:\n        key: value\n    spec:\n      containers:\n        - name: container_name\n          image: image_name\n")),(0,o.kt)("h3",{id:"deployment"},"Deployment"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"k create deploy deployment_name --image=image_name --replicas=no_of_pods")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"k scale deploy deploy_name --replicas=no_of_pods")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"k edit deploy deploy_name                                              ----\x3e edit any field of deployment")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"k set image deploy deploy_name container_name=nginx:1.9.1 --record     ----\x3e changed image to different version with record flag capturing cmd used")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"k rollout status deploy deploy_name")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"k rollout history deploy deploy_name                                   ----\x3e show revisions of deployment")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"k rollout undo deploy deploy_name                                      ----\x3e undo deployment to last revision")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"k rollout history deploy deploy_name --revision=number                 ----\x3e describe deployment of revision number")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"k rollout undo deploy deploy_name --to-revision=number                 ----\x3e rollback deployment to specific version"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: deployment_name\n  labels:\n    key: value\nspec:\n  replicas: no_of_pods\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  selectors:\n    matchLabels:\n      key: value\n  template:\n    metadata:\n      name: pod_name\n      labels:\n        key: value\n    spec:\n      containers:\n        - name: container_name\n          image: image_name\n          ports:\n            - containerPort: 8080\n")))}d.isMDXComponent=!0}}]);